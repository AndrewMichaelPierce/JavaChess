package sample;

import java.lang.reflect.Array;
import java.util.ArrayList;
import java.util.Arrays;

public class Chessboard extends Compression {


    public static ArrayList<ArrayList> blank = new ArrayList(Arrays.asList(
            200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
            200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
            200,  21,  22,  23,  24,  25,  26,  27,  28, 200,
            200,  31,  32,  33,  34,  35,  36,  37,  38, 200,
            200,  41,  42,  43,  44,  45,  46,  47,  48, 200,
            200,  51,  52,  53,  54,  55,  56,  57,  58, 200,
            200,  61,  62,  63,  64,  65,  66,  67,  68, 200,
            200,  71,  72,  73,  74,  75,  76,  77,  78, 200,
            200,  81,  82,  83,  84,  85,  86,  87,  88, 200,
            200,  91,  92,  93,  94,  95,  96,  97,  98, 200,
            200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
            200, 200, 200, 200, 200, 200, 200, 200, 200, 200
    ));
    //public static double[] active = {
    public static ArrayList letterBoard = new ArrayList(Arrays.asList(
            200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
            200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
            200,  21,  22,  23,  24,  25,  26,  27,  28, 200,
            200,  31,  32,  33,  34,  35,  36,  37,  38, 200,
            200,  41,  42,  43,  44,  45,  46,  47,  48, 200,
            200,  51,  52,  53,  54,  55,  56,  57,  58, 200,
            200,  61,  62,  63,  64,  65,  66,  67,  68, 200,
            200,  71,  72,  73,  74,  75,  76,  77,  78, 200,
            200,  81,  82,  83,  84,  85,  86,  87,  88, 200,
            200,  91,  92,  93,  94,  95,  96,  97,  98, 200,
            200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
            200, 200, 200, 200, 200, 200, 200, 200, 200, 200
    ));
    //public static double[] whiteInfluence = {
    public static ArrayList whiteInfluence = new ArrayList(Arrays.asList(
            200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
            200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
            200,  21,  22,  23,  24,  25,  26,  27,  28, 200,
            200,  31,  32,  33,  34,  35,  36,  37,  38, 200,
            200,  41,  42,  43,  44,  45,  46,  47,  48, 200,
            200,  51,  52,  53,  54,  55,  56,  57,  58, 200,
            200,  61,  62,  63,  64,  65,  66,  67,  68, 200,
            200,  71,  72,  73,  74,  75,  76,  77,  78, 200,
            200,  81,  82,  83,  84,  85,  86,  87,  88, 200,
            200,  91,  92,  93,  94,  95,  96,  97,  98, 200,
            200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
            200, 200, 200, 200, 200, 200, 200, 200, 200, 200
    ));
    // public static double[] blackInfluence = {
    public static ArrayList blackInfluence = new ArrayList(Arrays.asList(
            200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
            200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
            200,  21,  22,  23,  24,  25,  26,  27,  28, 200,
            200,  31,  32,  33,  34,  35,  36,  37,  38, 200,
            200,  41,  42,  43,  44,  45,  46,  47,  48, 200,
            200,  51,  52,  53,  54,  55,  56,  57,  58, 200,
            200,  61,  62,  63,  64,  65,  66,  67,  68, 200,
            200,  71,  72,  73,  74,  75,  76,  77,  78, 200,
            200,  81,  82,  83,  84,  85,  86,  87,  88, 200,
            200,  91,  92,  93,  94,  95,  96,  97,  98, 200,
            200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
            200, 200, 200, 200, 200, 200, 200, 200, 200, 200
    ));
/*
    //public static double[] plain = {
    public static ArrayList createOccupiedXBoard() {
        ArrayList occupiedXboard = new ArrayList(Arrays.asList(
                //public static ArrayList occupiedXBoard = new ArrayList(Arrays.asList(
                200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
                200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
                200, 21, 22, 23, 24, 25, 26, 27, 28, 200,
                200, 31, 32, 33, 34, 35, 36, 37, 38, 200,
                200, 41, 42, 43, 44, 45, 46, 47, 48, 200,
                200, 51, 52, 53, 54, 55, 56, 57, 58, 200,
                200, 61, 62, 63, 64, 65, 66, 67, 68, 200,
                200, 71, 72, 73, 74, 75, 76, 77, 78, 200,
                200, 81, 82, 83, 84, 85, 86, 87, 88, 200,
                200, 91, 92, 93, 94, 95, 96, 97, 98, 200,
                200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
                200, 200, 200, 200, 200, 200, 200, 200, 200, 200
        ));
        return occupiedXboard;
    }
*/

    public static ArrayList human = new ArrayList(Arrays.asList(
            200,  200,  200,  200,  200,  200,  200,  200,  200, 200,
            200,  200,  200,  200,  200,  200,  200,  200,  200, 200,
            200, "a8", "b8", "c8", "d8", "e8", "f8", "g8", "h8", 200,
            200, "a7", "b7", "c7", "d7", "e7", "f7", "g7", "h7", 200,
            200, "a6", "b6", "c6", "d6", "e6", "f6", "g6", "h6", 200,
            200, "a5", "b5", "c5", "d5", "e5", "f5", "g5", "h5", 200,
            200, "a4", "b4", "c4", "d4", "e4", "f4", "g4", "h4", 200,
            200, "a3", "b3", "c3", "d3", "e3", "f3", "g3", "h3", 200,
            200, "a2", "b2", "c2", "d2", "e2", "f2", "g2", "h2", 200,
            200, "a1", "b1", "c1", "d1", "e1", "f1", "g1", "h1", 200,
            200,  200,  200,  200,  200,  200,  200,  200,  200, 200,
            200,  200,  200,  200,  200,  200,  200,  200,  200, 200
    ));
    public static ArrayList legal = new ArrayList(Arrays.asList(
            200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
            200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
            200,  21,  22,  23,  24,  25,  26,  27,  28, 200,
            200,  31,  32,  33,  34,  35,  36,  37,  38, 200,
            200,  41,  42,  43,  44,  45,  46,  47,  48, 200,
            200,  51,  52,  53,  54,  55,  56,  57,  58, 200,
            200,  61,  62,  63,  64,  65,  66,  67,  68, 200,
            200,  71,  72,  73,  74,  75,  76,  77,  78, 200,
            200,  81,  82,  83,  84,  85,  86,  87,  88, 200,
            200,  91,  92,  93,  94,  95,  96,  97,  98, 200,
            200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
            200, 200, 200, 200, 200, 200, 200, 200, 200, 200
    ));
    public static ArrayList createIconBoard() {
        ArrayList iconBoard = new ArrayList(Arrays.asList(
                200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
                200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
                200,  21,  22,  23,  24,  25,  26,  27,  28, 200,
                200,  31,  32,  33,  34,  35,  36,  37,  38, 200,
                200,  41,  42,  43,  44,  45,  46,  47,  48, 200,
                200,  51,  52,  53,  54,  55,  56,  57,  58, 200,
                200,  61,  62,  63,  64,  65,  66,  67,  68, 200,
                200,  71,  72,  73,  74,  75,  76,  77,  78, 200,
                200,  81,  82,  83,  84,  85,  86,  87,  88, 200,
                200,  91,  92,  93,  94,  95,  96,  97,  98, 200,
                200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
                200, 200, 200, 200, 200, 200, 200, 200, 200, 200
        ));
        return iconBoard;
    }

    public static ArrayList occupiedXBoard = new ArrayList(Arrays.asList(
            200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
            200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
            200, 21, 22, 23, 24, 25, 26, 27, 28, 200,
            200, 31, 32, 33, 34, 35, 36, 37, 38, 200,
            200, 41, 42, 43, 44, 45, 46, 47, 48, 200,
            200, 51, 52, 53, 54, 55, 56, 57, 58, 200,
            200, 61, 62, 63, 64, 65, 66, 67, 68, 200,
            200, 71, 72, 73, 74, 75, 76, 77, 78, 200,
            200, 81, 82, 83, 84, 85, 86, 87, 88, 200,
            200, 91, 92, 93, 94, 95, 96, 97, 98, 200,
            200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
            200, 200, 200, 200, 200, 200, 200, 200, 200, 200
    ));
}
